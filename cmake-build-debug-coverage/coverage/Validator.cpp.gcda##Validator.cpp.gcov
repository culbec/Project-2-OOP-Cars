        -:    0:Source:/home/culbec/OOP/Project-2-OOP-Cars/Sources/Validator.cpp
        -:    0:Graph:/home/culbec/OOP/Project-2-OOP-Cars/cmake-build-debug-coverage/CMakeFiles/Project_2_OOP_Cars.dir/Sources/Validator.cpp.gcno
        -:    0:Data:/home/culbec/OOP/Project-2-OOP-Cars/cmake-build-debug-coverage/CMakeFiles/Project_2_OOP_Cars.dir/Sources/Validator.cpp.gcda
        -:    0:Runs:1
        -:    1:#include "../Headers/Validator.h"
        -:    2:
function _ZN9Validator17validateRegNumberERK3Car called 25 returned 32% blocks executed 76%
       25:    3:bool Validator::validateRegNumber(const Car &car) {
       25:    4:    string errors; // vom pastra toate erorile
       25:    4-block  0
call    0 returned 25
        -:    5:
       25:    6:    string regNumber = car.getRegNumber(); // retinem numarul de inmatriculare
call    0 returned 25
branch  1 taken 25 (fallthrough)
branch  2 taken 0 (throw)
        -:    7:
        -:    8:    // verificam daca nr. de inmatriculare este string-ul vid
       25:    9:    if (regNumber.empty())
       25:    9-block  0
call    0 returned 25
branch  1 taken 3 (fallthrough)
branch  2 taken 22
        3:   10:        throw ValidatorException("Nr. de inmatriculare nu poate fi vid!"); // aruncam direct exceptie
        3:   10-block  0
call    0 returned 3
call    1 returned 3
call    2 returned 3
branch  3 taken 3 (fallthrough)
branch  4 taken 0 (throw)
        3:   10-block  1
call    5 returned 3
call    6 returned 3
call    7 returned 3
call    8 returned 3
    $$$$$:   10-block  2
call    9 never executed
    $$$$$:   10-block  3
    $$$$$:   10-block  4
    $$$$$:   10-block  5
call   10 never executed
        -:   11:
        -:   12:    // verificam daca nr. de inmatriculare se incadreaza ca lungime intre 6 si 7
       22:   13:    if (regNumber.size() < 6 || regNumber.size() > 7)
       22:   13-block  0
call    0 returned 22
branch  1 taken 20 (fallthrough)
branch  2 taken 2
       20:   13-block  1
call    3 returned 20
branch  4 taken 0 (fallthrough)
branch  5 taken 20
        2:   13-block  2
       20:   13-block  3
       22:   13-block  4
branch  6 taken 2 (fallthrough)
branch  7 taken 20
        2:   14:        throw ValidatorException(
call    0 returned 2
call    1 returned 2
branch  2 taken 2 (fallthrough)
branch  3 taken 0 (throw)
        2:   14-block  0
call    4 returned 2
call    5 returned 2
call    6 returned 2
    $$$$$:   14-block  1
call    7 never executed
    $$$$$:   14-block  2
    $$$$$:   14-block  3
        4:   15:                "Nr. de inmatriculare trebuie sa fie de forma: \n Exemplu: CJ12CEVA, pentru toate judetele inafara de Bucuresti\n Exemplu: B76XZY sau B777ZZZ pentru judetul Bucuresti.\n");
        2:   15-block  0
call    0 returned 2
call    1 returned 2
    $$$$$:   15-block  1
call    2 never executed
        -:   16:
        -:   17:    // acum putem valida numarul de inmatriculare
       20:   18:    if (regNumber.at(0) == 'B' && !(regNumber.at(1) >= 'A' && regNumber.at(1) <= 'Z')) {
       20:   18-block  0
call    0 returned 20
branch  1 taken 20 (fallthrough)
branch  2 taken 0 (throw)
       20:   18-block  1
branch  3 taken 12 (fallthrough)
branch  4 taken 8
       12:   18-block  2
call    5 returned 12
branch  6 taken 12 (fallthrough)
branch  7 taken 0 (throw)
       12:   18-block  3
branch  8 taken 3 (fallthrough)
branch  9 taken 9
        3:   18-block  4
call   10 returned 3
branch 11 taken 3 (fallthrough)
branch 12 taken 0 (throw)
        3:   18-block  5
branch 13 taken 1 (fallthrough)
branch 14 taken 2
       10:   18-block  6
       10:   18-block  7
       20:   18-block  8
branch 15 taken 10 (fallthrough)
branch 16 taken 10
       10:   19:        if (regNumber.size() == 7) {
       10:   19-block  0
call    0 returned 10
branch  1 taken 5 (fallthrough)
branch  2 taken 5
        9:   20:            if ((regNumber.at(1) >= '1' && regNumber.at(1) <= '9') &&
        5:   20-block  0
call    0 returned 5
branch  1 taken 5 (fallthrough)
branch  2 taken 0 (throw)
        4:   20-block  1
call    3 returned 4
branch  4 taken 4 (fallthrough)
branch  5 taken 0 (throw)
        4:   20-block  2
branch  6 taken 3 (fallthrough)
branch  7 taken 1
       12:   21:                (regNumber.at(2) >= '0' && regNumber.at(2) <= '9') &&
        5:   21-block  0
branch  0 taken 4 (fallthrough)
branch  1 taken 1
        3:   21-block  1
call    2 returned 3
branch  3 taken 3 (fallthrough)
branch  4 taken 0 (throw)
        3:   21-block  2
branch  5 taken 3 (fallthrough)
branch  6 taken 0
        3:   21-block  3
call    7 returned 3
branch  8 taken 3 (fallthrough)
branch  9 taken 0 (throw)
        3:   21-block  4
branch 10 taken 3 (fallthrough)
branch 11 taken 0
        3:   21-block  5
        2:   21-block  6
        5:   21-block  7
branch 12 taken 3 (fallthrough)
branch 13 taken 2
        3:   22:                (regNumber.at(3) >= '0' && regNumber.at(3) <= '9')) { //numar de genul B132XYZ
        3:   22-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   22-block  1
branch  3 taken 3 (fallthrough)
branch  4 taken 0
        3:   22-block  2
call    5 returned 3
branch  6 taken 3 (fallthrough)
branch  7 taken 0 (throw)
        3:   22-block  3
branch  8 taken 3 (fallthrough)
branch  9 taken 0
        3:   23:                if (!(regNumber.at(4) >= 'A' && regNumber.at(4) <= 'Z'))
        3:   23-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   23-block  1
branch  3 taken 2 (fallthrough)
branch  4 taken 1
        2:   23-block  2
call    5 returned 2
branch  6 taken 2 (fallthrough)
branch  7 taken 0 (throw)
        2:   23-block  3
branch  8 taken 0 (fallthrough)
branch  9 taken 2
        1:   23-block  4
        2:   23-block  5
        3:   23-block  6
branch 10 taken 1 (fallthrough)
branch 11 taken 2
        2:   24:                    errors = errors +
        1:   24-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
    $$$$$:   24-block  1
        1:   25:                             "Caracterul de pe pozitia 5 trebuie sa fie litera majuscula!\n";
        1:   25-block  0
call    0 returned 1
       2*:   26:                else if (!(regNumber.at(5) >= 'A' && regNumber.at(5) <= 'Z'))
        2:   26-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   26-block  1
branch  3 taken 2 (fallthrough)
branch  4 taken 0
        2:   26-block  2
call    5 returned 2
branch  6 taken 2 (fallthrough)
branch  7 taken 0 (throw)
        2:   26-block  3
branch  8 taken 0 (fallthrough)
branch  9 taken 2
    %%%%%:   26-block  4
        2:   26-block  5
        2:   26-block  6
branch 10 taken 0 (fallthrough)
branch 11 taken 2
    #####:   27:                    errors = errors +
    %%%%%:   27-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
    $$$$$:   27-block  1
    #####:   28:                             "Caracterul de pe pozitia 6 trebuie sa fie litera majuscula!\n";
    %%%%%:   28-block  0
call    0 never executed
       2*:   29:                else if (!(regNumber.at(6) >= 'A' && regNumber.at(6) <= 'Z'))
        2:   29-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   29-block  1
branch  3 taken 0 (fallthrough)
branch  4 taken 2
    %%%%%:   29-block  2
call    5 never executed
branch  6 never executed
branch  7 never executed
    %%%%%:   29-block  3
branch  8 never executed
branch  9 never executed
        2:   29-block  4
    %%%%%:   29-block  5
        2:   29-block  6
branch 10 taken 2 (fallthrough)
branch 11 taken 0
        4:   30:                    errors = errors +
        2:   30-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 2
    $$$$$:   30-block  1
        2:   31:                             "Caracterul de pe pozitia 7 trebuie sa fie litera majuscula!\n";
        2:   31-block  0
call    0 returned 2
        -:   32:            } else
        2:   33:                errors = errors + "'B' trebuie sa fie urmat de 3 cifre!\n";
        2:   33-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   33-block  1
call    3 returned 2
call    4 returned 2
    $$$$$:   33-block  2
        -:   34:        } else {
        -:   35:            // numar de genul B10YCZ
        5:   36:            if (!(regNumber.at(3) >= 'A' && regNumber.at(3) <= 'Z'))
        5:   36-block  0
call    0 returned 5
branch  1 taken 5 (fallthrough)
branch  2 taken 0 (throw)
        5:   36-block  1
branch  3 taken 3 (fallthrough)
branch  4 taken 2
        3:   36-block  2
call    5 returned 3
branch  6 taken 3 (fallthrough)
branch  7 taken 0 (throw)
        3:   36-block  3
branch  8 taken 0 (fallthrough)
branch  9 taken 3
        2:   36-block  4
        3:   36-block  5
        5:   36-block  6
branch 10 taken 2 (fallthrough)
branch 11 taken 3
        4:   37:                errors = errors +
        2:   37-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 2
    $$$$$:   37-block  1
        2:   38:                         "'B' trebuie sa fie urmat de 2 cifre si 3 litere!\n";
        2:   38-block  0
call    0 returned 2
        6:   39:            else if ((regNumber.at(1) >= '0' && regNumber.at(1) <= '9') &&
        3:   39-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   39-block  1
branch  3 taken 3 (fallthrough)
branch  4 taken 0
        3:   39-block  2
call    5 returned 3
branch  6 taken 3 (fallthrough)
branch  7 taken 0 (throw)
        3:   39-block  3
branch  8 taken 3 (fallthrough)
branch  9 taken 0
        2:   39-block  4
        1:   39-block  5
        3:   39-block  6
branch 10 taken 2 (fallthrough)
branch 11 taken 1
        3:   40:                     (regNumber.at(2) >= '0' && regNumber.at(2) <= '9')) { // avem numar de genul B100XYZ
        3:   40-block  0
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:   40-block  1
branch  3 taken 3 (fallthrough)
branch  4 taken 0
        3:   40-block  2
call    5 returned 3
branch  6 taken 3 (fallthrough)
branch  7 taken 0 (throw)
        3:   40-block  3
branch  8 taken 2 (fallthrough)
branch  9 taken 1
        -:   41:                // numar de genul B10_YZ
       2*:   42:                if (!(regNumber.at(3) >= 'A' && regNumber.at(3) <= 'Z'))
        2:   42-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   42-block  1
branch  3 taken 2 (fallthrough)
branch  4 taken 0
        2:   42-block  2
call    5 returned 2
branch  6 taken 2 (fallthrough)
branch  7 taken 0 (throw)
        2:   42-block  3
branch  8 taken 0 (fallthrough)
branch  9 taken 2
    %%%%%:   42-block  4
        2:   42-block  5
        2:   42-block  6
branch 10 taken 0 (fallthrough)
branch 11 taken 2
    #####:   43:                    errors = errors +
    %%%%%:   43-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
    $$$$$:   43-block  1
    #####:   44:                             "Caracterul de pe pozitia 5 trebuie sa fie litera majuscula!\n";
    %%%%%:   44-block  0
call    0 never executed
        -:   45:                    // numar de genul B10X_Z
        2:   46:                else if (!(regNumber.at(4) >= 'A' && regNumber.at(4) <= 'Z'))
        2:   46-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        2:   46-block  1
branch  3 taken 1 (fallthrough)
branch  4 taken 1
        1:   46-block  2
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   46-block  3
branch  8 taken 0 (fallthrough)
branch  9 taken 1
        1:   46-block  4
        1:   46-block  5
        2:   46-block  6
branch 10 taken 1 (fallthrough)
branch 11 taken 1
        2:   47:                    errors = errors +
        1:   47-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
    $$$$$:   47-block  1
        1:   48:                             "Caracterul de pe pozitia 6 trebuie sa fie litera majuscula!\n";
        1:   48-block  0
call    0 returned 1
        -:   49:                    // numar de genul B10XY_
       1*:   50:                else if (!(regNumber.at(5) >= 'A' && regNumber.at(5) <= 'Z'))
        1:   50-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   50-block  1
branch  3 taken 1 (fallthrough)
branch  4 taken 0
        1:   50-block  2
call    5 returned 1
branch  6 taken 1 (fallthrough)
branch  7 taken 0 (throw)
        1:   50-block  3
branch  8 taken 1 (fallthrough)
branch  9 taken 0
        1:   50-block  4
    %%%%%:   50-block  5
        1:   50-block  6
branch 10 taken 1 (fallthrough)
branch 11 taken 0
        2:   51:                    errors = errors +
        1:   51-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
call    3 returned 1
    $$$$$:   51-block  1
        1:   52:                             "Caracterul de pe pozitia 7 trebuie sa fie litera majuscula!\n";
        1:   52-block  0
call    0 returned 1
        1:   53:            } else errors = errors + "'B' trebuie sa fie urmat de 2 cifre si 3 litere!\n";
        1:   53-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   53-block  1
call    3 returned 1
call    4 returned 1
    $$$$$:   53-block  2
        -:   54:        }
        -:   55:    } else {
       10:   56:        if (regNumber.size() != 7)
       10:   56-block  0
call    0 returned 10
branch  1 taken 1 (fallthrough)
branch  2 taken 9
        1:   57:            errors = errors + "Numarul de inmatriculare trebuie sa fie de forma: CJ77ZZZ!\n";
        1:   57-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   57-block  1
call    3 returned 1
call    4 returned 1
    $$$$$:   57-block  2
        -:   58:        else {
       17:   59:            if ((regNumber.at(2) >= '0' && regNumber.at(2) <= '9') &&
        9:   59-block  0
call    0 returned 9
branch  1 taken 9 (fallthrough)
branch  2 taken 0 (throw)
        9:   59-block  1
branch  3 taken 8 (fallthrough)
branch  4 taken 1
        8:   59-block  2
call    5 returned 8
branch  6 taken 8 (fallthrough)
branch  7 taken 0 (throw)
        8:   59-block  3
branch  8 taken 8 (fallthrough)
branch  9 taken 0
        8:   59-block  4
        1:   59-block  5
        9:   59-block  6
branch 10 taken 8 (fallthrough)
branch 11 taken 1
        8:   60:                (regNumber.at(3) >= '0' && regNumber.at(3) <= '9')) {
        8:   60-block  0
call    0 returned 8
branch  1 taken 8 (fallthrough)
branch  2 taken 0 (throw)
        8:   60-block  1
branch  3 taken 8 (fallthrough)
branch  4 taken 0
        8:   60-block  2
call    5 returned 8
branch  6 taken 8 (fallthrough)
branch  7 taken 0 (throw)
        8:   60-block  3
branch  8 taken 8 (fallthrough)
branch  9 taken 0
       8*:   61:                if (!(regNumber.at(4) >= 'A' && regNumber.at(4) <= 'Z'))
        8:   61-block  0
call    0 returned 8
branch  1 taken 8 (fallthrough)
branch  2 taken 0 (throw)
        8:   61-block  1
branch  3 taken 8 (fallthrough)
branch  4 taken 0
        8:   61-block  2
call    5 returned 8
branch  6 taken 8 (fallthrough)
branch  7 taken 0 (throw)
        8:   61-block  3
branch  8 taken 0 (fallthrough)
branch  9 taken 8
    %%%%%:   61-block  4
        8:   61-block  5
        8:   61-block  6
branch 10 taken 0 (fallthrough)
branch 11 taken 8
    #####:   62:                    errors = errors +
    %%%%%:   62-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
    $$$$$:   62-block  1
    #####:   63:                             "Caracterul de pe pozitia 5 trebuie sa fie litera majuscula!\n";
    %%%%%:   63-block  0
call    0 never executed
       8*:   64:                else if (!(regNumber.at(5) >= 'A' && regNumber.at(5) <= 'Z'))
        8:   64-block  0
call    0 returned 8
branch  1 taken 8 (fallthrough)
branch  2 taken 0 (throw)
        8:   64-block  1
branch  3 taken 8 (fallthrough)
branch  4 taken 0
        8:   64-block  2
call    5 returned 8
branch  6 taken 8 (fallthrough)
branch  7 taken 0 (throw)
        8:   64-block  3
branch  8 taken 0 (fallthrough)
branch  9 taken 8
    %%%%%:   64-block  4
        8:   64-block  5
        8:   64-block  6
branch 10 taken 0 (fallthrough)
branch 11 taken 8
    #####:   65:                    errors = errors +
    %%%%%:   65-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
    $$$$$:   65-block  1
    #####:   66:                             "Caracterul de pe pozitia 6 trebuie sa fie litera majuscula!\n";
    %%%%%:   66-block  0
call    0 never executed
       8*:   67:                else if (!(regNumber.at(6) >= 'A' && regNumber.at(6) <= 'Z'))
        8:   67-block  0
call    0 returned 8
branch  1 taken 8 (fallthrough)
branch  2 taken 0 (throw)
        8:   67-block  1
branch  3 taken 8 (fallthrough)
branch  4 taken 0
        8:   67-block  2
call    5 returned 8
branch  6 taken 8 (fallthrough)
branch  7 taken 0 (throw)
        8:   67-block  3
branch  8 taken 0 (fallthrough)
branch  9 taken 8
    %%%%%:   67-block  4
        8:   67-block  5
        8:   67-block  6
branch 10 taken 0 (fallthrough)
branch 11 taken 8
    #####:   68:                    errors = errors +
    %%%%%:   68-block  0
call    0 never executed
branch  1 never executed
branch  2 never executed
call    3 never executed
    $$$$$:   68-block  1
    #####:   69:                             "Caracterul de pe pozitia 7 trebuie sa fie litera majuscula!\n";
    %%%%%:   69-block  0
call    0 never executed
        1:   70:            } else errors = errors + "Judetul trebuie sa fie urmat de 2 cifre!\n";
        1:   70-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   70-block  1
call    3 returned 1
call    4 returned 1
    $$$$$:   70-block  2
        -:   71:        }
        -:   72:    }
       20:   73:    if (!errors.empty())
       20:   73-block  0
call    0 returned 20
branch  1 taken 12 (fallthrough)
branch  2 taken 8
       12:   74:        throw ValidatorException(errors);
       12:   74-block  0
call    0 returned 12
call    1 returned 12
branch  2 taken 12 (fallthrough)
branch  3 taken 0 (throw)
       12:   74-block  1
call    4 returned 12
call    5 returned 12
call    6 returned 12
    $$$$$:   74-block  2
    $$$$$:   74-block  3
call    7 never executed
        8:   75:    return true;
        8:   75-block  0
       42:   76:}
        8:   76-block  0
call    0 returned 8
call    1 returned 8
       17:   76-block  1
call    2 returned 17
       17:   76-block  2
call    3 returned 17
        -:   77:
function _ZN9Validator16validateProducerERK3Car called 17 returned 59% blocks executed 84%
       17:   78:bool Validator::validateProducer(const Car &car) {
       17:   79:    string producer = car.getProducer(); // salvam producatorul
       17:   79-block  0
call    0 returned 17
branch  1 taken 17 (fallthrough)
branch  2 taken 0 (throw)
        -:   80:
       17:   81:    if (producer.empty())
       17:   81-block  0
call    0 returned 17
branch  1 taken 4 (fallthrough)
branch  2 taken 13
        4:   82:        throw ValidatorException("Producatorul nu poate fi vid!\n");
        4:   82-block  0
call    0 returned 4
call    1 returned 4
call    2 returned 4
branch  3 taken 4 (fallthrough)
branch  4 taken 0 (throw)
        4:   82-block  1
call    5 returned 4
call    6 returned 4
call    7 returned 4
call    8 returned 4
    $$$$$:   82-block  2
call    9 never executed
    $$$$$:   82-block  3
    $$$$$:   82-block  4
    $$$$$:   82-block  5
call   10 never executed
        -:   83:
       13:   84:    string errors; // aici salvam erorile
       13:   84-block  0
call    0 returned 13
        -:   85:
       13:   86:    if (producer.at(0) < 'A' || producer.at(0) > 'Z')
call    0 returned 13
branch  1 taken 13 (fallthrough)
branch  2 taken 0 (throw)
       13:   86-block  0
branch  3 taken 13 (fallthrough)
branch  4 taken 0
       13:   86-block  1
call    5 returned 13
branch  6 taken 13 (fallthrough)
branch  7 taken 0 (throw)
       13:   86-block  2
branch  8 taken 2 (fallthrough)
branch  9 taken 11
        2:   86-block  3
       11:   86-block  4
       13:   86-block  5
branch 10 taken 2 (fallthrough)
branch 11 taken 11
        2:   87:        errors += "Producatorul trebuie sa inceapa cu majuscula!\n";
        2:   87-block  0
call    0 returned 2
branch  1 taken 2 (fallthrough)
branch  2 taken 0 (throw)
        -:   88:
       81:   89:    for (unsigned int i = 1; i < producer.size(); i++)
       13:   89-block  0
       68:   89-block  1
       81:   89-block  2
call    0 returned 81
branch  1 taken 69
branch  2 taken 12 (fallthrough)
       69:   90:        if (!(producer.at(i) >= 'a' && producer.at(i) <= 'z')) {
       69:   90-block  0
call    0 returned 69
branch  1 taken 69 (fallthrough)
branch  2 taken 0 (throw)
       69:   90-block  1
branch  3 taken 68 (fallthrough)
branch  4 taken 1
       68:   90-block  2
call    5 returned 68
branch  6 taken 68 (fallthrough)
branch  7 taken 0 (throw)
       68:   90-block  3
branch  8 taken 0 (fallthrough)
branch  9 taken 68
        1:   90-block  4
       68:   90-block  5
       69:   90-block  6
branch 10 taken 1 (fallthrough)
branch 11 taken 68
        1:   91:            errors += "Producatorul trebuie sa contina doar litere!\n";
        1:   91-block  0
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:   92:            break;
        1:   92-block  0
        -:   93:        }
       13:   94:    if (!errors.empty())
       13:   94-block  0
call    0 returned 13
branch  1 taken 3 (fallthrough)
branch  2 taken 10
        3:   95:        throw ValidatorException(errors);
        3:   95-block  0
call    0 returned 3
call    1 returned 3
branch  2 taken 3 (fallthrough)
branch  3 taken 0 (throw)
        3:   95-block  1
call    4 returned 3
call    5 returned 3
call    6 returned 3
    $$$$$:   95-block  2
    $$$$$:   95-block  3
call    7 never executed
        -:   96:
       10:   97:    return true;
       10:   97-block  0
       20:   98:}
       10:   98-block  0
call    0 returned 10
call    1 returned 10
        3:   98-block  1
call    2 returned 3
        7:   98-block  2
call    3 returned 7
        -:   99:
function _ZN9Validator13validateModelERK3Car called 16 returned 81% blocks executed 73%
       16:  100:bool Validator::validateModel(const Car &car) {
       16:  101:    string model = car.getModel(); // aici salvam modelul masinii
       16:  101-block  0
call    0 returned 16
branch  1 taken 16 (fallthrough)
branch  2 taken 0 (throw)
        -:  102:
       16:  103:    if (model.empty())
       16:  103-block  0
call    0 returned 16
branch  1 taken 3 (fallthrough)
branch  2 taken 13
        3:  104:        throw ValidatorException("Modelul nu poate sa fie vid!\n");
        3:  104-block  0
call    0 returned 3
call    1 returned 3
call    2 returned 3
branch  3 taken 3 (fallthrough)
branch  4 taken 0 (throw)
        3:  104-block  1
call    5 returned 3
call    6 returned 3
call    7 returned 3
call    8 returned 3
    $$$$$:  104-block  2
call    9 never executed
    $$$$$:  104-block  3
    $$$$$:  104-block  4
    $$$$$:  104-block  5
call   10 never executed
        -:  105:
       13:  106:    return true;
       13:  106-block  0
       16:  107:}
       13:  107-block  0
call    0 returned 13
        3:  107-block  1
call    1 returned 3
        -:  108:
function _ZN9Validator12validateTypeERK3Car called 5 returned 60% blocks executed 73%
        5:  109:bool Validator::validateType(const Car &car) {
        5:  110:    string type = car.getType(); // aici salvam tipul masinii;
        5:  110-block  0
call    0 returned 5
branch  1 taken 5 (fallthrough)
branch  2 taken 0 (throw)
        -:  111:
        5:  112:    if (type.empty())
        5:  112-block  0
call    0 returned 5
branch  1 taken 2 (fallthrough)
branch  2 taken 3
        2:  113:        throw ValidatorException("Tipul nu poate sa fie nul!\n");
        2:  113-block  0
call    0 returned 2
call    1 returned 2
call    2 returned 2
branch  3 taken 2 (fallthrough)
branch  4 taken 0 (throw)
        2:  113-block  1
call    5 returned 2
call    6 returned 2
call    7 returned 2
call    8 returned 2
    $$$$$:  113-block  2
call    9 never executed
    $$$$$:  113-block  3
    $$$$$:  113-block  4
    $$$$$:  113-block  5
call   10 never executed
        3:  114:    return true;
        3:  114-block  0
        5:  115:}
        3:  115-block  0
call    0 returned 3
        2:  115-block  1
call    1 returned 2
        -:  116:
function _ZN9Validator11validateCarERK3CarRK10Repository called 11 returned 55% blocks executed 67%
       11:  117:bool Validator::validateCar(const Car &car, const Repository &carRepo) {
       11:  118:    string errors; // aici salvam erorile
       11:  118-block  0
call    0 returned 11
        -:  119:
        -:  120:    try {
       11:  121:        validateRegNumber(car);
call    0 returned 11
branch  1 taken 7 (fallthrough)
branch  2 taken 4 (throw)
        -:  122:    }
        4:  123:    catch (ValidatorException& validatorException) {
        4:  123-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 4
        4:  123-block  1
call    2 returned 4
        4:  124:        errors += validatorException.getMessage();
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
        4:  124-block  0
call    3 returned 4
branch  4 taken 4 (fallthrough)
branch  5 taken 0 (throw)
        4:  124-block  1
call    6 returned 4
    $$$$$:  124-block  2
call    7 never executed
    $$$$$:  124-block  3
        4:  125:    }
call    0 returned 4
branch  1 taken 4 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:  125-block  0
call    3 never executed
        -:  126:
        -:  127:    try {
       11:  128:        validateProducer(car);
       11:  128-block  0
call    0 returned 11
branch  1 taken 8 (fallthrough)
branch  2 taken 3 (throw)
        -:  129:    }
        3:  130:    catch (ValidatorException& validatorException) {
        3:  130-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 3
        3:  130-block  1
call    2 returned 3
        3:  131:        errors += validatorException.getMessage();
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
        3:  131-block  0
call    3 returned 3
branch  4 taken 3 (fallthrough)
branch  5 taken 0 (throw)
        3:  131-block  1
call    6 returned 3
    $$$$$:  131-block  2
call    7 never executed
    $$$$$:  131-block  3
        3:  132:    }
call    0 returned 3
branch  1 taken 3 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:  132-block  0
call    3 never executed
        -:  133:
        -:  134:    try {
       11:  135:        validateModel(car);
       11:  135-block  0
call    0 returned 11
branch  1 taken 10 (fallthrough)
branch  2 taken 1 (throw)
        -:  136:    }
        1:  137:    catch (ValidatorException& validatorException) {
        1:  137-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 1
        1:  137-block  1
call    2 returned 1
        1:  138:        errors += validatorException.getMessage();
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        1:  138-block  0
call    3 returned 1
branch  4 taken 1 (fallthrough)
branch  5 taken 0 (throw)
        1:  138-block  1
call    6 returned 1
    $$$$$:  138-block  2
call    7 never executed
    $$$$$:  138-block  3
        1:  139:    }
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
    $$$$$:  139-block  0
call    3 never executed
        -:  140:
        -:  141:    try {
       21:  142:        carRepo.findCar(car.getRegNumber());
       11:  142-block  0
call    0 returned 11
branch  1 taken 11 (fallthrough)
branch  2 taken 0 (throw)
       11:  142-block  1
call    3 returned 11
branch  4 taken 1 (fallthrough)
branch  5 taken 10 (throw)
        1:  142-block  2
call    6 returned 1
       10:  142-block  3
call    7 returned 10
       10:  142-block  4
        1:  143:        errors += "Masina exista deja in lista!\n";
call    0 returned 1
branch  1 taken 1 (fallthrough)
branch  2 taken 0 (throw)
        -:  144:    }
       10:  145:    catch (RepositoryException& repositoryException) {}
       10:  145-block  0
branch  0 taken 0 (fallthrough)
branch  1 taken 10
       10:  145-block  1
call    2 returned 10
call    3 returned 10
branch  4 taken 10 (fallthrough)
branch  5 taken 0 (throw)
        -:  146:
       11:  147:    if (!errors.empty())
       11:  147-block  0
call    0 returned 11
branch  1 taken 5 (fallthrough)
branch  2 taken 6
        5:  148:        throw ValidatorException(errors);
        5:  148-block  0
call    0 returned 5
call    1 returned 5
branch  2 taken 5 (fallthrough)
branch  3 taken 0 (throw)
        5:  148-block  1
call    4 returned 5
call    5 returned 5
call    6 returned 5
    $$$$$:  148-block  2
    $$$$$:  148-block  3
call    7 never executed
        6:  149:    return true;
        6:  149-block  0
       11:  150:}
        6:  150-block  0
call    0 returned 6
        5:  150-block  1
call    1 returned 5
